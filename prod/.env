###################################################################################################
# Personalisation settings
###################################################################################################
# Urls
# If you are using HTTPS then the FQDN must match that of the server's common name (as per the SSL certificate).
# This setting is only relevant for the public facing endpoint but is mandatory.
#
FHIR_STORE_ASYNC_URL=https://fhir.appliance.development.myorg/fhir/stu4/bulk
FHIR_STORE_BASE_URL=https://fhir.appliance.development.myorg/fhir/stu3
# 
# Upserts
# The FHIR Appliance can support the notion of an "upsert" which in FHIR terms is the creation of a resource using an update interaction. If the resource with [id] exists then the resource will be updated, else it will be created. Refer to http://www.hl7.org/fhir/stu3/http.html#update for further information.
# This setting is not endpoint specific and if it is set, the feature will apply to both public and integration APIs.
# Setting values: true if this is required, false otherwise (updates will fail with 400 errors if the target resource does not exist)
#
ALLOW_UPSERT=true|false
#
# Tag
# The FHIR Appliance will "stamp" all resources that it serves with a meta.tag. This convey the identity of the FHIR Appliance and is useful to trace where a FHIR resource orginated.
#
# This is setting is only relevant for NHS organisations in England that use the FHIR Appliance as part of a regional care record programme. If this is you then you should use the following:
# system: https://fqdn.nhs.uk/Source (where fqdn.nhs.uk is the domain name of the shared care record programme).
# code: Your organisations organisation data service (ODS) code
# display: The official name of your organisation.
#
# Default settings are also provided but you can modify the system, code and display as per your own requirements. 
#
TAG={"system":"https://my.org/Source","code":"000","display":"My organisation's FHIR Appliance"}
#
####################################################################################
# Database connection string
####################################################################################
# The format for postgres is: mssql://[USER]:[PASSWORD]@[DB_HOST]:[DB_HOST_PORT]/fhirstore
# The format for mssql (ms sql server) is: mssql://[USER]:[PASSWORD]@[DB_HOST]:[DB_HOST_PORT]/fhirstore
# 
# The database and user must exist before starting the FHIR Appliance.
# The FHIR Appliance will generate all database objects on startup if they do not exist.
# The default port for postgres is 5432
# The default port for mssql is 1433 
#
DATABASE_SERVICE=postgres|mssql
DATABASE_CONNECTION=postgres|mssql://mydbuser:my_db_password@fhir-appliance-db:5432|1433/fhirstore
#
####################################################################################
# Endpoints
####################################################################################
# This section defines the endpoint configuration(s) that will expose
# functionally equivalent FHIR APIs. There are two endpoints: 
# 
# FHIR_API_GATEWAY
# This is the FHIR Appliance's public endpoint.
#
# FHIR_INTEGRATION_API_GATEWAY
# This API is intended to be used by "known" or "trusted"
# clients, for example, an integration engine in a healthcare provider.
#
# Both APIs expose an identical FHIR API but can have different transport
# security and authentication settings depending on requirements. 
# For example, you might want to provide a less secure API for internal "known"
# systems to push data and a secure API for public consumption.
#
FHIR_API_GATEWAY_TRANSPORT=http|https
#
# HTTP CONFIGURED TO RUN ON THE DEFAULT NODE.JS PORT BY DEFAULT BUT CAN BE CHANGED
# HTTPS SHOULD ALWAYS RUN ON 443 FOR PUBLIC ENDPOINTS BUT CAN BE CHANGED (JUST MEANS CLIENTS NEED TO SPECIFY THE PORT IN ANY REQUEST)
FHIR_API_GATEWAY_TRANSPORT_PORT=3000|443
#
# MUTAL TLS FALSE BY DEFAULT
FHIR_API_GATEWAY_HTTPS_ENABLE_MUTUAL_TLS=true|false
#
FHIR_API_GATEWAY_HTTPS_CERTIFICATE=[file/path/to/cert.pem]
FHIR_API_GATEWAY_HTTPS_CERTIFICATE_PRIVATE_KEY=[file/path/to/key.pem]
#
# PASSPHRASE IS OPTIONAL
FHIR_API_GATEWAY_HTTPS_CERTIFICATE_PASSPHRASE=[file/path/to/passphrase.txt]
#
# IF USING MUTAL TLS
FHIR_API_GATEWAY_HTTPS_CA_ROOT=[file/path/to/root.ca.pem]
#
# SET TO TRUE TO HAVE THE FHIR APPLIANCE CREATE FHIR AuditEvent RESOURCES FOR EVERY INTERACTION (false by default)
FHIR_API_GATEWAY_AUDIT_ACCESS=true|false
#
# SET TO TRUE TO HAVE THE FHIR APPLIANCE APPLY CONSENT/DATA SHARING POLICIES FOR EVERY PATIENT CENTRIC READ/SEARCH INTERACTION (false by default)
FHIR_API_GATEWAY_ADVANCED_CONSENT=true|false
#
FHIR_INTEGRATION_API_GATEWAY_ENABLED=true|false
#
# THE INTEGRATION API MUST RUN ON DIFFERENT TCP PORTS TO THE PUBLIC API
# DEFAULTS ARE PROVIDED BUT CAN BE CHANGED. 
FHIR_INTEGRATION_API_GATEWAY_TRANSPORT=http|https
FHIR_INTEGRATION_API_GATEWAY_TRANSPORT_PORT=8300|8443
#
# MUTAL TLS FALSE BY DEFAULT
FHIR_INTEGRATION_API_GATEWAY_HTTPS_ENABLE_MUTUAL_TLS=true|false
#
FHIR_INTEGRATION_API_GATEWAY_HTTPS_CERTIFICATE=[file/path/to/cert.pem]
FHIR_INTEGRATION_API_GATEWAY_HTTPS_CERTIFICATE_PRIVATE_KEY=[file/path/to/key.pem]
#
# PASSPHRASE IS OPTIONAL
FHIR_INTEGRATION_API_GATEWAY_HTTPS_CERTIFICATE_PASSPHRASE=[file/path/to/passphrase.txt]
#
# IF USING MUTAL TLS
FHIR_INTEGRATION_API_GATEWAY_HTTPS_CA_ROOT=[file/path/to/root.ca.pem]
#
# SET TO TRUE TO HAVE THE FHIR APPLIANCE CREATE FHIR AuditEvent RESOURCES FOR EVERY INTERACTION (false by default)
FHIR_INTEGRATION_API_GATEWAY_AUDIT_ACCESS=true|false
#
# SET TO TRUE TO HAVE THE FHIR APPLIANCE APPLY CONSENT/DATA SHARING POLICIES FOR EVERY PATIENT CENTRIC READ/SEARCH INTERACTION (false by default)
FHIR_INTEGRATION_API_GATEWAY_ADVANCED_CONSENT=true|false
#
####################################################################################
# Authentication
####################################################################################
# This section defines the settings for each of the authentication methods that can
# be applied to each gateway.
#
# If omitted no (none) authentication will be used.
# Authentication strategy can be different across dual endpoints.
#
# Recommended to use JWT authentication for public API endpoints.
# Use Mutal TLS and JWT authentication for maximum endpoint security (all that would be missing is a firewall in this case)
#
FHIR_API_GATEWAY_AUTH=none|jwt|apikey
FHIR_INTEGRATION_API_GATEWAY_AUTH=none|jwt|apikey
# 
# JSON Web Token (JWT) shared secret
# The same JWT shared secret will apply to both endpoints if you are running dual APIs.
# This setting is used by the FHIR Appliance to verify that JWTs passed in the 
# authentication header of each inbound request were signed by the same shared secret.
# 
# If you are using public key infrastructure (PKI) to sign JWT assertions 
# then the JWT must be signed by the private key generated when the signing certficate
# was requested from a certificate authority (CA). In this case, the setting should 
# point or reference the public key of the CA who issued the certficate. 
# The CA public certificate is simply used to verify that the token was signed by the claimant.
# 
# If the verification fails then the request is rejected with either a HTTP Status Code
# 401 (Unauthorised) or HTTP Status Code 403 (Forbidden).
# 
# The setting can be a string, reference to a file or a url
JWT_SHARED_SECRET_OR_PUBLIC_KEY=string|url|file/path/to/public.key.pem
#
####################################################################################
# Other settings
####################################################################################
#
# The following can be changed but sensible/suitable defaults are provided.
# Each setting applies to both endpoints (if running dual endpoints).
# 
# The number of days to remove the results of an asynchronous query from the database
ASYNCEXPIRES=7
#
# The number of minutes to remove cached searched results from the database
CACHEEXPIRES=600
# 
# The maximum number of results per page in a paged search
MAXPAGESIZE=1000
#
# The maximum number of concurrent database clients (for Postgres only)
MAX_CLIENTS=10
#
# Logging - LOG_LEVEL is DEBUG by default but can be one of the standard log level settings: debug|info|warn|error
LOGGER=true
LOG_LEVEL=debug
#
# Tracing - Set to true if you wish to view console message traces
TRACE_CONSOLE=false